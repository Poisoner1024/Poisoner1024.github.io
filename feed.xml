<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>毒师1024的处方</title>
    <description></description>
    <link></link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>微服务设计安全篇 - 示例</title>
        <description>结合之前的安全概念，展示下如何使用这些安全技术</description>
        <pubDate>Thu, 06 Apr 2017 00:00:00 +0800</pubDate>
        <link>/posts/micro-service-security-demo</link>
        <guid isPermaLink="true">/posts/micro-service-security-demo</guid>
      </item>
    
      <item>
        <title>微服务设计安全篇 - 静态数据的安全</title>
        <description>数据加密是一种责任，尤其当它是敏感数据时</description>
        <pubDate>Fri, 31 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/micro-service-security-static-data</link>
        <guid isPermaLink="true">/posts/micro-service-security-static-data</guid>
      </item>
    
      <item>
        <title>微服务设计安全篇 - 深度防御</title>
        <description>不把鸡蛋放在一个篮子里面</description>
        <pubDate>Fri, 31 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/micro-service-security-depense-in-depth</link>
        <guid isPermaLink="true">/posts/micro-service-security-depense-in-depth</guid>
      </item>
    
      <item>
        <title>微服务设计安全篇 - 服务间的身份验证和授权</title>
        <description>程序或其他服务之间的认证</description>
        <pubDate>Fri, 31 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/micro-service-security-aa-between-services</link>
        <guid isPermaLink="true">/posts/micro-service-security-aa-between-services</guid>
      </item>
    
      <item>
        <title>微服务设计安全篇 - 身份验证和授权</title>
        <description>系统交互的人和事的核心概念</description>
        <pubDate>Thu, 30 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/micro-service-security-aa</link>
        <guid isPermaLink="true">/posts/micro-service-security-aa</guid>
      </item>
    
      <item>
        <title>设计模式 - 创建型模式 - 原型</title>
        <description>用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象</description>
        <pubDate>Thu, 30 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/design-pattern-creational-prototype</link>
        <guid isPermaLink="true">/posts/design-pattern-creational-prototype</guid>
      </item>
    
      <item>
        <title>Richardson成熟度模型</title>
        <description>RESTFul API成熟度模型</description>
        <pubDate>Thu, 30 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/richardson-maturity-model</link>
        <guid isPermaLink="true">/posts/richardson-maturity-model</guid>
      </item>
    
      <item>
        <title>设计模式 - 创建型模式 - 单件</title>
        <description>保证一个类仅有一个实例</description>
        <pubDate>Tue, 28 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/design-pattern-creational-singleton</link>
        <guid isPermaLink="true">/posts/design-pattern-creational-singleton</guid>
      </item>
    
      <item>
        <title>设计模式 - 行为模式 - 模板方法</title>
        <description>定义一个操作中的算法的骨架，而将一些步骤延迟到子类中</description>
        <pubDate>Tue, 28 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/design-pattern-behavioral-template-method</link>
        <guid isPermaLink="true">/posts/design-pattern-behavioral-template-method</guid>
      </item>
    
      <item>
        <title>设计模式 - 行为模式 - 策略</title>
        <description>定义一系列算法，把它们一个个封装起来，并且使它们可以相互替换</description>
        <pubDate>Mon, 27 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/design-pattern-behavioral-strategy</link>
        <guid isPermaLink="true">/posts/design-pattern-behavioral-strategy</guid>
      </item>
    
  </channel>
</rss>
