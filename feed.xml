<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>毒师1024的处方</title>
    <description></description>
    <link></link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>设计模式 - 结构型模式 - 适配器</title>
        <description>将一个类的接口转换成客户希望的另外一个接口</description>
        <pubDate>Sat, 18 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/design-pattern-structural-adapter</link>
        <guid isPermaLink="true">/posts/design-pattern-structural-adapter</guid>
      </item>
    
      <item>
        <title>设计模式 - 结构型模式 - 开篇</title>
        <description>组合类和对象以获得更大的结构</description>
        <pubDate>Fri, 17 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/design-pattern-structural</link>
        <guid isPermaLink="true">/posts/design-pattern-structural</guid>
      </item>
    
      <item>
        <title>设计模式 - 创建型模式 - 抽象工厂</title>
        <description>提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类</description>
        <pubDate>Wed, 15 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/design-pattern-creational-abstract-factory</link>
        <guid isPermaLink="true">/posts/design-pattern-creational-abstract-factory</guid>
      </item>
    
      <item>
        <title>设计模式 - 创建型模式 - 工厂方法</title>
        <description>定义一个用于创建对象的接口，让子类决定实例化哪一个类</description>
        <pubDate>Tue, 14 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/design-pattern-creational-factory-method</link>
        <guid isPermaLink="true">/posts/design-pattern-creational-factory-method</guid>
      </item>
    
      <item>
        <title>设计模式 - 创建型模式 - 开篇</title>
        <description>抽象了实例化的过程</description>
        <pubDate>Mon, 13 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/design-pattern-creational</link>
        <guid isPermaLink="true">/posts/design-pattern-creational</guid>
      </item>
    
      <item>
        <title>单元测试代码指导规范</title>
        <description>如何写出优美而实效的单元测试代码</description>
        <pubDate>Fri, 10 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/unit-testing-guidelines</link>
        <guid isPermaLink="true">/posts/unit-testing-guidelines</guid>
      </item>
    
      <item>
        <title>设计模式怎样解决设计问题</title>
        <description>打开正确的使用设计模式的姿势</description>
        <pubDate>Wed, 08 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/how-to-apply-design-pattern</link>
        <guid isPermaLink="true">/posts/how-to-apply-design-pattern</guid>
      </item>
    
      <item>
        <title>什么是设计模式</title>
        <description>可复用面向对象软件的基础</description>
        <pubDate>Tue, 07 Mar 2017 00:00:00 +0800</pubDate>
        <link>/posts/what-is-design-pattern</link>
        <guid isPermaLink="true">/posts/what-is-design-pattern</guid>
      </item>
    
      <item>
        <title>在代码审查中我们究竟想发现什么？- 安全篇</title>
        <description>没有安全，没有用户</description>
        <pubDate>Tue, 28 Feb 2017 00:00:00 +0800</pubDate>
        <link>/posts/what-to-look-for-in-a-code-security</link>
        <guid isPermaLink="true">/posts/what-to-look-for-in-a-code-security</guid>
      </item>
    
      <item>
        <title>在代码审查中我们究竟想发现什么？- SOLID原则篇</title>
        <description>面向对象编程的五大核心原则</description>
        <pubDate>Mon, 27 Feb 2017 00:00:00 +0800</pubDate>
        <link>/posts/what-to-look-for-in-a-code-solid-principles</link>
        <guid isPermaLink="true">/posts/what-to-look-for-in-a-code-solid-principles</guid>
      </item>
    
  </channel>
</rss>
